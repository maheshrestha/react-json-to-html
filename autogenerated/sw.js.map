{"version":3,"file":"sw.js","sources":["../../../../private/var/folders/q8/y0zkv56s0yz589s073bh_r4c0000gn/T/a173c3a27922e93ef014c2cdf9fe62d5/sw.js"],"sourcesContent":["import {clientsClaim as workbox_core_clientsClaim} from '/Users/maheshshrestha/Documents/CLI/node_modules/workbox-core/clientsClaim.mjs';\nimport {precacheAndRoute as workbox_precaching_precacheAndRoute} from '/Users/maheshshrestha/Documents/CLI/node_modules/workbox-precaching/precacheAndRoute.mjs';/**\n * Welcome to your Workbox-powered service worker!\n *\n * You'll need to register this file in your web app.\n * See https://goo.gl/nhQhGp\n *\n * The rest of the code is auto-generated. Please don't update this file\n * directly; instead, make changes to your Workbox build configuration\n * and re-run your build process.\n * See https://goo.gl/2aRDsh\n */\n\n\n\n\n\n\n\n\nself.addEventListener('message', (event) => {\n  if (event.data && event.data.type === 'SKIP_WAITING') {\n    self.skipWaiting();\n  }\n});\n\nworkbox_core_clientsClaim();\n\n\n/**\n * The precacheAndRoute() method efficiently caches and responds to\n * requests for URLs in the manifest.\n * See https://goo.gl/S9QRab\n */\nworkbox_precaching_precacheAndRoute([\n  {\n    \"url\": \"index.html\",\n    \"revision\": \"518f3dec306908f8a82abc1c45148da7\"\n  },\n  {\n    \"url\": \"myReactApp.js\",\n    \"revision\": \"af7d32b1a255dfbb044bbaffb9338a0f\"\n  }\n], {});\n\n\n\n\n\n\n\n\n"],"names":["self","addEventListener","event","data","type","skipWaiting","workbox_core_clientsClaim","workbox_precaching_precacheAndRoute"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EACiK;EACjK;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EASAA,IAAI,CAACC,gBAAL,CAAsB,SAAtB,EAAkCC,KAAD,IAAW;EAC1C,MAAIA,KAAK,CAACC,IAAN,IAAcD,KAAK,CAACC,IAAN,CAAWC,IAAX,KAAoB,cAAtC,EAAsD;EACpDJ,IAAAA,IAAI,CAACK,WAAL;EACD;EACF,CAJD;AAMAC,sBAAyB;EAGzB;EACA;EACA;EACA;EACA;;AACAC,0BAAmC,CAAC,CAClC;EACE,SAAO,YADT;EAEE,cAAY;EAFd,CADkC,EAKlC;EACE,SAAO,eADT;EAEE,cAAY;EAFd,CALkC,CAAD,EAShC,EATgC,CAAnC;;"}